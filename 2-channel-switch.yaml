blueprint:
  name: '[Z2M] Generic 2-channel on/off w/dim'
  description: Blueprint for 2-channel switch (On/Off and dim)
  domain: automation
  source_url: https://raw.githubusercontent.com/sahansen/homeassistant/master/2-channel-switch.yaml
  input:
    remote:
      name: Remote
      description: Device to use
      selector:
        entity:
          integration: mqtt
          domain: sensor
    lights_upper:
      name: Light(s) for upper buttons
      description: Light(s) to control when using upper buttons
      default:
        entity_id: none
      selector:
        target:
          entity:
            domain: light
    lights_lower:
      name: Light(s) for lower buttons
      description: Light(s) to control when using default light actions
      default:
        entity_id: none
      selector:
        target:
          entity:
            domain: light
mode: restart
max_exceeded: silent
trigger:
- platform: state
  entity_id: !input 'remote'
  attribute: action
variables:
  command: '{{ trigger.to_state.state }}'
condition:
- condition: template
  value_template: '{{ command != ''''}}'
action:
- choose:
  - conditions:
    - '{{ command == ''on_l1'' }}'
    sequence:
      - service: light.turn_on
        target: !input 'lights_upper'
        data:
          transition: 0.5
          brightness_pct: 50
  - conditions:
    - '{{ command == ''off_l1'' }}'
    sequence:
      - service: light.turn_off
        target: !input 'lights_upper'
        data:
          transition: 0.5
  - conditions:
    - '{{ command == ''brightness_move_up_l1'' }}'
    sequence:
      repeat:
        while:
        - condition: template
          value_template: '{{ repeat.index < 10 }}'
        sequence:
        - service: light.turn_on
          target: !input 'lights_upper'
          data:
            transition: 0.5
            brightness_step_pct: 10
        - delay: 0.5
  - conditions:
    - '{{ command == ''brightness_move_down_l1'' }}'
    sequence:
      repeat:
        while:
        - condition: template
          value_template: '{{ repeat.index < 10 }}'
        sequence:
        - service: light.turn_on
          target: !input 'lights_upper'
          data:
            transition: 0.5
            brightness_step_pct: -10
        - delay: 0.5
  - conditions:
    - '{{ command == ''on_l2'' }}'
    sequence:
      - service: light.turn_on
        target: !input 'lights_lower'
        data:
          transition: 0.5
          brightness_pct: 50
  - conditions:
    - '{{ command == ''off_l2'' }}'
    sequence:
      - service: light.turn_off
        target: !input 'lights_lower'
        data:
          transition: 0.5
  - conditions:
    - '{{ command == ''brightness_move_up_l2'' }}'
    sequence:
      repeat:
        while:
        - condition: template
          value_template: '{{ repeat.index < 10 }}'
        sequence:
        - service: light.turn_on
          target: !input 'lights_lower'
          data:
            transition: 0.5
            brightness_step_pct: 10
        - delay: 0.5
  - conditions:
    - '{{ command == ''brightness_move_down_l2'' }}'
    sequence:
      repeat:
        while:
        - condition: template
          value_template: '{{ repeat.index < 10 }}'
        sequence:
        - service: light.turn_on
          target: !input 'lights_lower'
          data:
            transition: 0.5
            brightness_step_pct: -10
        - delay: 0.5
